#ifndef __CTRL_H__
#define __CTRL_H__

#ifdef __cplusplus
extern "C" {
#endif
	
#include	"stdint.h"	
#include    "rtdef.h"	
#include 	"stm32f4xx_gpio.h"
#define ABOX

#define SOFT_VER									"Ver"	


//#define APPF_VERSION             	3             /**< major version number */
//#define APPF_SUBVERSION          	0              /**< minor version number */
//#define APPF_REVISION            	4L            /**< revise version number */	
//#define APP_VER	 (APPF_VERSION *100 + APPF_SUBVERSION *10 + APPF_REVISION)
	
//#define APPH_VERSION             	0L              /**< major version number */
//#define APPH_SUBVERSION          	151015L         /**< minor version number */
//#define APPH_REVISION            	1L             /**< revise version number */	

#define APP_START_ADDR			   0x8008000   //app 文件起始地址
#define APPF_VER_CEILING           400 // 程序版本上限   程序版本300-400
#define APPF_VER_LOWER 		       300 //程序版本下限


#define LEDON										0
#define LEDOFF									 	1

//#define Dev_type 					0x10   //  盒子的设备类型

#define LED_GAF									GPIOD
#define LED_ROOF								GPIO_Pin_2  //顶板 RUN  -----LD104
#define LED_MON									GPIO_Pin_3	//monitor  MON -----LD103
#define LED_CAN								    GPIO_Pin_4	//CAN ETH  TALK	-----LD101
#define LED_BOX									GPIO_Pin_5	 //LINK  ----------LD102

	
#define CDMA_TIME									1
#define GPS_TIME									2
#define NET_TIME									3
#define CPU_TIME									4
#define GSM_TIME									5	//add

#define RT_USING_UART1
#define RT_USING_UART3
//#define RT_FILE_SYS_ERROR  /* 处理文件系统出错的情况 */

#define SIMPWR                    GPIO_Pin_0
//#define SIMRST										GPIO_Pin_0	 
#define IN_K											GPIO_Pin_4



#define RT_DELAY_MS               1000 / RT_TICK_PER_SECOND
//#define VPDN
#define SOCKET_CLOSE              (-1)//0xFF   // 服务器关闭

#define	BUFF_LEN				          1024
#pragma pack(1) 	

struct can_pack_head
{
		uint8_t		sot; // 0xEB
		uint8_t		ver; // 0x01
		
		uint16_t		len; // ??
		uint16_t		cmd; // ??
		uint16_t		id;
};

/*
struct can_pack_head1
{
		uint8_t		sot; // 0xEB
		uint8_t		ver; // 0x02
		uint16_t	len; // ??

		uint32_t 	dev_id;
		uint16_t	cmd; // ??
		uint16_t	id;
};
*/


typedef struct
{
	int 				baud_rate;        	//波特率     		1200 - 115200
	char 				data_bits;        	//数据位     		8 
	char 				stop_bits;        	//停止位     		1  
	char 				parity;           	//校验位     		0: NONE 1: ODD 2: EVEN
	char				addr;             	//地址    	 		0 - 255
}uart_conf;


typedef struct setapp
{
	uart_conf 	com1;								//串口	
	uart_conf 	com2;								//串口	
	uart_conf 	com3;								// 串口	
	
//	uart_conf 	com2;								//串口	
//	uart_conf 	com4;								//串口	
//	uart_conf 	com5;								// 串口			
	uint32_t		id;								  //设备号       1-65535
//	uint32_t	    dev_id;						//模块的dev_id    识别器材的唯一标志
//	char				mode;	
	int					rectime;            //存储时间间隔 30分
	int					recfilelen;         //文件记录长度
	int					recmemlen;          //缓冲区长度	
	int					pagesize;           //显示页面条数	
	char				username[32];       //设备用户名   XX公司
//	char				time;               //时间同步源   1: CDMA 2: GPS 3: NET 4: NONE	
}SETAPP;

#define MDN_NUM 16


//四字节对其
typedef struct 
{
// system setup
	char				mdn[MDN_NUM];	

	/* 暂不需要 */
	char				ipaddr[16];	        //IP地址     		192.168.1.3
	char				ipmaskaddr[16];     //MASK       		255.255.255.255
	char				ipgatwayaddr[16];   //GATWAY     		192.168.1.1
	
	char				ipdnsaddr[16];      //DNS        		27.12.23.1
	char				seraddr[16];				//服务器地址 		223.12.11.11
	char				serport[8];					//服务器端口 		8888
	char				seruse[32];					//用户名     		m2m
	char				setpass[16];				//密码       		vnet.mobi
 //  char        heartbeat;          // 心跳间隔	
	uart_conf 	com[6];							//串口
	
	//char				timezone;	          //时区
	char				setname[20];        //记录文件名    power.dat	
	
//app setup	
    rt_uint32_t       cdmatype;           //E107  模块型号      0: sub-g  1:2G  2:4G
	uint32_t         ver;	//软件版本
	SETAPP			app;
	//char    sreq;

	
	

}stSysSetup;



typedef struct packcmd
{
		char			soh; //起始符  		$
		char			cmd; //101--E106   102--E107							
		int32_t		id;       					//设备号  		1-65535
		int16_t		len;      					//包体长度
}stPackCmd;

/*  */
typedef struct packestcmd
{
	    unsigned int dev_id;  // 需要指定具体设备的dev_id             102协议
		int16_t		cmd;       					//------命令
	    int16_t   id;
//		int16_t		subind;      				//包体长度
//		int16_t		offset;      				//包体长度
}stPackEstCmd;


//#ifdef RT_CDMA_USING
typedef struct stGprsimsi
{
    unsigned char ccid[32]; //当前SIM卡的CCID号 标志号
    
    /*//五码跟写号有关
    unsigned char imsi[16];   
    unsigned char akey[18];
    unsigned char esn[10];
    unsigned char an[32];
    unsigned char aaa[18];
	*/
    unsigned char sn[32];//当前设备的序列号
}stGprsimsi;

typedef struct stGprsInfo
{
    stGprsimsi    imsi;
    unsigned char name[16];             //产品信息
    unsigned char revision[48];    //软件版本 固件版本
    unsigned char imei[16]; 
    unsigned char chip[16];
    unsigned char cops[16];
    unsigned char meid[16]; //当前SIM卡的IMSI号	
    unsigned char mdn[16];    //手机号码
    char          rssi;				//信号强度
    char          ser;                 
    char          creg;
    char          cregsta;				//网络注册及状态查询
    char          sim;
    char          cgatt;
    int           basepos;
    int           lac;
    int           cid;
    int           e;
    int           n;
    int           down;
	unsigned int  dev_id;						//模块的dev_id    识别器材的唯一标志
	unsigned char  hver;   		//硬件版本
    short int     link;
	rt_device_t   AT_device;
	rt_uint8_t    ver;     //面板的协议版本---- 根据ox161命令 来看---从0x20发送
	char 		  AT_status;
	char 		  currentConnectStyle;//当前连接的方式       	NULL = 0,WIFI_CONNECT = 1,ETH_CONNECT = 2,
	char 		  freq_num; //当前频段
	char		  serNetNum;//当前服务器条目项
	rt_tick_t     serHeartTime;//服务器的心跳判断依据
	
}stCdmaInfo;

//#endif
extern stCdmaInfo        Cdma_Info;
extern	stSysSetup		 Sys_Setup;

void getAppVertion(rt_uint32_t *ver);
void  DefaultSetup(stSysSetup *setup);
void	ReadSetup(stSysSetup *setup);
void	SaveSetup(stSysSetup *setup);
void  OutputLed(char onoff, int led);
rt_uint32_t USB_ConnectStatus(void);


void at_printf(const char *format, ...);
void at_print_close(void);
void at_print_open(void);



#ifdef __cplusplus
}
#endif
#endif
